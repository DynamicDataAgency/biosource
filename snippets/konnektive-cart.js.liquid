{%- comment %}
  @param cart (cart, mandatory)
  @param checkout_url (string, mandatory) the checkout url
  @param checkout_button_selector (string) the query selector for the checkout button
{% endcomment -%}

{% unless checkout_url %}
  {% assign checkout_url = 'https://checkout.biosourcenutra.com/50f647ff-aa65-44fb-8087-3d49fb65a071.html' %}
{% endunless %}

{% unless checkout_button_selector %}
  {% assign checkout_button_selector = '[type="submit"][name="checkout"]' %}
{% endunless %}

<script>
  document.addEventListener("DOMContentLoaded", function () {
    var debug = true ? console.log.bind(console, '[DEBUG][KonnektiveCart]') : function () {};

    debug("Script loaded");

    window.KonnektiveCart = function (options) {
      var self = {};

      function productIdsWithQuantities() {
        {%- assign added_first = false -%}
        return {
          {%- for item in cart.items -%}
            {%- if item.variant.metafields.productId.productId -%}
              {%- if added_first %},{% endif -%}
              "{{ item.variant.metafields.productId.productId }}": {{ item.quantity | json }}
              {%- assign added_first = true -%}
            {%- endif -%}
          {%- endfor -%}
        };
      }

      function init() {
        var p = productIdsWithQuantities();
        if (options && options.products) p = options.products;
        self.options = Object.assign(
          {
            products: p,
            checkoutButtonSelector: `{{ checkout_button_selector }}`,
            checkoutUrl: "{{ checkout_url }}",
          },
          options
        );

        self.$checkoutButton = $(self.options.checkoutButtonSelector);

        debug("Initialized with options", self.options);
        inject();
      }

      function inject() {
        debug("Inject");
        // if options.products found, request is from theme.js. Enable the button
        if (options && options.products && biosourcenutra.cart_submit) {
          console.log("delayed checkout");
          self.$checkoutButton.on("click", checkout);
          clearTimeout(biosourcenutra.timer)
          biosourcenutra.timer = setTimeout(() => {
            biosourcenutra.cart_submit.disabled = false;
          }, 2500);
        } else {
          console.log("initial checkout");
          self.$checkoutButton.on("click", checkout);
        }
      }
    
      function checkout(event) {
        var checkoutUrl = getCheckoutURL(self.options.products);
        debug("Checkout ->", checkoutUrl);
        event.preventDefault();
        window.location.href = checkoutUrl;
      }

      function getCartCookie(name) {
        var match = document.cookie.match(
          new RegExp("(^| )" + name + "=([^;]+)")
        );
        if (match) {
          return match[2];
        }
      }

      function getCheckoutURL(products) {
        cookie = getCartCookie("cart");
        var urlLineItems = Object.keys(products)
          .reduce(function (output, productId) {
            var quantity = products[productId];
            return output.concat([productId + ":" + quantity]);
          }, [])
          .join(";");

        return (
          self.options.checkoutUrl +
          "?products=" +
          urlLineItems +
          "&cartId=" +
          cookie
        );
      }

      init();

      return self;
    };

    var instance = new KonnektiveCart();
  });
  ;

</script>
